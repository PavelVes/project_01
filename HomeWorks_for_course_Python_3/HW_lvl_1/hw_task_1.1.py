# Домашняя работа по задачи 1.1 курса Python 3


# Задача 1.1. (условия)

# Есть строка с перечислением песен

# my_favorite_songs = 'Waste a Moment, Staying\' Alive, A Sorta Fairytale, Start Me Up, New Salvation'

# Выведите на консоль с помощью индексации строки, последовательно: 
# первый трек, последний, второй, второй с конца
# Нельзя переопределять my_favorite_songs и запятая не должна выводиться.



# !!! Решение 1: (Просто по конкретной фиксированной строке)

print('\n') # Пустая строка в начале для наглядности вывода в консоли


my_favorite_songs = 'Waste a Moment, Staying\' Alive, A Sorta Fairytale, Start Me Up, New Salvation'

# Первый трек
print(my_favorite_songs[:my_favorite_songs.find(',')])

# Последний трек
print(my_favorite_songs[my_favorite_songs.rfind(',')+2:])

# Второй трек
pos1 = my_favorite_songs.find(',') # Находим позицию каждой запятой
pos2 = my_favorite_songs.find(',', pos1 + 1)
pos3 = my_favorite_songs.find(',', pos2 + 1)
pos4 = my_favorite_songs.rfind(',') # Можно, конечно, все это было прописать для каждого Print внутри

print(my_favorite_songs[pos1+2: pos2])

# Второй трек с конца
print(my_favorite_songs[pos3+2: pos4])

# Конец решения 1.



# !!! Решение 2: через списки и циклы (универсальное, должно бы быть)

#my_favorite_songs = 'вода, небо, песок, река, камень, кусок, берег, дно, тишина, пляж, деревья, луна'
# Выше - контрольный пример другой последовательности "имен", через запятую.
print('\n') # Пустая строка для разделения вывода в консоли


# Определим позиции запятых
quantity = my_favorite_songs.count(',') # считаем кол-во запятых в строке
count = 1  # определяем стартовый индекс для цикла
position = [0]  # создаем список с первым значением (index=0) для ссылки на него в цикле

while count <= quantity: # создаем список с номерами позиций запятых
    position.append(my_favorite_songs.find(',', position[count-1] + 1))
    count += 1
position.append(len(my_favorite_songs) + 1) # Добавляем значение последней позиции строки +1 (т.к. выбирает ДО)
# Имеем список номеров, где каждое "Имя" содержится между двумя соседними числами


# !Определяем порядок песен (можно через Инпут сделать в список, через цикл; или рандомно по кол-ву)
sequence = [1, 5, 2, 4] # Должен быть хотя бы 1 номер и не больше кол-ва "имен" (через проверку и исключение)
# Тут я исхожу из того, что ввод номера начинается от 1. (понятного для человеков), и является корректным,
# Иначе просто исправить индексы в выводе ниже (и добавить исключения)


#sequence = [2, 5, 5, 1, 3, 1, 2, 4] # Проверночая последовательность произовльная по количеству и порядку

# Выводим список названий выбранных песен, убирая не нужные символы.
for i in sequence:
    print(my_favorite_songs[position[i - 1]: position[i]].strip(' ,'))

# Если надо вывести в одну строку, но с нужной последовательностью, то в цикл для вывода вместо Print
# введем append. А потом просто распечатаем конечный результат (уже без цикла)


# Конец решения 2

print('\n') # Пустая строка для разделения вывода в консоли



# Решение 3. (через спискок, но это наверное переопределение будет?)

for i in sequence: # Последовательность для вывода задана выше.
    print(my_favorite_songs.split(',')[i - 1].strip(' ,'), sep='\n')


# Конец решения 3.


print('\n') # Пустая строка для разделения вывода в консоли