# Домашняя работа по задаче 1.3 п.B  курса Python 3

# Задача 1.3. (Условие)

# Напишите скрипт, который принимает от пользователя номер месяца, 
# а возвращает количество дней в нем.
# Результат проверки вывести на консоль
# Допущение: в феврале 28 дней
# Если номер месяца некорректен - сообщить об этом

# Например,
    # Введите номер месяца: 3
    # Вы ввели март. 31 дней

    # Введите номер месяца: 2
    # Вы ввели февраль. 28 дней

    # Введите номер месяца: 15
    # Такого месяца нет!



# Решение.
print('\n') # Пустая строка для разделения вывода в консоли


# Создаем словарь с Месяцами и кол-м дней в них (можно добавить и пр. элементы)
days_in_months = {
    1: ('Январь', 31),
    2: ('Февраль', 28),
    3: ('Март', 31),
    4: ('Апрель', 30),
    5: ('Май', 31),
    6: ('Июнь', 30),
    7: ('Июль', 31),
    8: ('Август', 31),
    9: ('Сентябрь', 30),
    10: ('Октябрь', 31),
    11: ('Ноябрь', 30),
    12: ('Декабрь', 31),
    }


# Запрос и проверка номера месяца
while True:
    try:
        month = int(input('Укажите номер месяца: '))
        if month < 1 or month > 12: raise Exception
        break
    except:  
        print('\n\n', 'Номер месяца должен быть целым числом \nв интервале от 1 до 12', '\n', sep='')
        continue
    # Тут обобщенное исключение для всех ошибок. 
    # Если надо вывести, что такого месяца нет, - исключить if и поднятие ошибки из while
    # и добавить отдельный вывод под условие
  
 
month_name = days_in_months.get(month)[0] # Получаем Имя месяца
days = days_in_months.get(month)[1] # Получаем кол-во дней

print('\n', f'Вы ввели {month_name}. {days} дней', sep='') # Согласно задаче.

# Конец решения.



# !Экспериментальные доработки.

print('\n') # Пустая строка для разделения вывода в консоли

# Переопределим название месяца 
# (хотя можно было сразу все падежные варианты задать в Словаре и обращаться сразу к нужному)
# (и туда же так же слово "день" в нужной форме добавить заодно, и др. по потребности) 

r_symbol = month_name[-1] # Получаем последнюю букву имени месяца

if r_symbol=='ь' or r_symbol=='й': # Меняем имя месяца на "е" в окончании
    month_name = month_name.replace('ь','е')
    month_name = month_name.replace('й','е')
else:
    month_name = month_name + 'е'


# Зададим слово "день" правильно
if int(str(days)[-1]) == 1:
    d = 'день'
else:
    d = 'дней'


# Выводим результат в другом виде:
print(f'В {month_name} {days} {d}.')


# Конец доработок




# !Более логичный подход (обозанчен выше)
print('\n') # Пустая строка для разделения вывода в консоли

# Создаем словарь с Месяцами и кол-м дней в них, а так же падежами 
# и словом "день" в нужной форме

dim = { # Переопределим имя для быстроты использования ниже (чисто для примера)
    1: ('Январь', 'Январе', 31, 'день'),
    2: ('Февраль', 'Феврале', 28, 'дней'),
    3: ('Март', 'Марте', 31, 'день'),
    4: ('Апрель', 'Апреле', 30, 'дней'),
    5: ('Май', 'Мае', 31, 'день'),
    6: ('Июнь', 'Июне', 30, 'дней'),
    7: ('Июль', 'Июле', 31, 'день'),
    8: ('Август', 'Августе', 31, 'день'),
    9: ('Сентябрь', 'Сентябре', 30, 'дней'),
    10: ('Октябрь', 'Октябре', 31, 'день'),
    11: ('Ноябрь', 'Ноябре', 30, 'дней'),
    12: ('Декабрь', 'Декабре', 31, 'день'),
    }

print(f'! В {dim.get(month)[1]} {dim.get(month)[2]} {dim.get(month)[3]}')

# Конец решения.


# Вопрос!: Что оптимальнее для кода, создать сразу подробный словарь (как в конце) или 
# преобразовать минимальный словарь под задачу (как в начале)?

print('\n') # Пустая строка для разделения вывода в консоли
